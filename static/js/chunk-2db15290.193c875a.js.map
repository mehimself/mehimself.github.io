{"version":3,"sources":["webpack:///./node_modules/mermaid/dist/stateDiagram-v2-d93cdb3a.js","webpack:///./node_modules/mermaid/dist/styles-6aaf32cf.js","webpack:///./node_modules/lodash-es/clone.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/json.js","webpack:///./node_modules/mermaid/dist/index-3862675e.js"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","SHAPE_STATE","SHAPE_STATE_WITH_DESC","SHAPE_START","SHAPE_END","SHAPE_DIVIDER","SHAPE_GROUP","SHAPE_NOTE","SHAPE_NOTEGROUP","CSS_DIAGRAM","CSS_STATE","CSS_DIAGRAM_STATE","concat","CSS_EDGE","CSS_NOTE","CSS_NOTE_EDGE","CSS_EDGE_NOTE_EDGE","CSS_DIAGRAM_NOTE","CSS_CLUSTER","CSS_DIAGRAM_CLUSTER","CSS_CLUSTER_ALT","CSS_DIAGRAM_CLUSTER_ALT","PARENT","NOTE","DOMID_STATE","DOMID_TYPE_SPACER","NOTE_ID","PARENT_ID","G_EDGE_STYLE","G_EDGE_ARROWHEADSTYLE","G_EDGE_LABELPOS","G_EDGE_LABELTYPE","G_EDGE_THICKNESS","nodeDb","graphItemCount","setConf","cnf","keys","_i","_keys","key","getClasses","text","diagramObj","db","extract","getRootDocV2","getClassesFromDbInfo","dbInfoItem","classes","join","stateDomId","itemId","undefined","counter","type","typeSpacer","typeStr","setupNode","g","parent","parsedItem","diagramStates","diagramDb","altFlag","id","classStr","shape","start","DEFAULT_STATE_TYPE","description","common","sanitizeText","getConfig","newNode","push","sanitizeTextOrArray","doc","log","info","getDir","dir","DIVIDER_TYPE","nodeData","labelStyle","labelText","style","domId","padding","note","noteData","groupData","parentNodeId","setNode","setParent","to","position","setEdge","arrowhead","arrowType","arrowheadStyle","labelpos","labelType","thickness","trace","setupDoc","parentParsedItem","forEach","item","stmt","STMT_STATE","STMT_RELATION","state1","state2","edgeData","arrowTypeEnd","label","defaultDir","DEFAULT_NESTED_DOC_DIR","parsedItemDoc","draw","_ref","_callee","_version","diag","_getConfig","securityLevel","conf","nodeSpacing","rankSpacing","sandboxElement","root","svg","element","bounds","width","height","svgBounds","vBox","labels","_iterator","_step","dim","rect","_context","getDirection","state","getStates","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","select","nodes","contentDocument","body","render","utils","insertTitle","titleTopMargin","getDiagramTitle","node","getBBox","attr","configureSvgSize","useMaxWidth","x","debug","document","querySelectorAll","createElementNS","setAttribute","insertBefore","firstChild","err","_x","_x2","_x3","_x4","renderer","diagram","parser","styles","init","arrowMarkerAbsolute","clear","k","o2","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","parser2","yy","symbols_","terminals_","2","4","5","6","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","30","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","49","50","51","52","53","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","setRootDoc","this","$","stateStmt","trimColon","relDescription","trim","match","parts","split","getDividerId","setAccTitle","setAccDescription","styleClass","setDirection","table","3","1","7","8","9","10","11","12","31","29","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","TERROR","EOF","args","lexer2","lexer","sharedState","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","lex","token","pop","symbol","action","len","newState","expected","yyval","errStr","showPosition","line","loc","first_line","last_line","first_column","last_column","range","_input","_more","_backtrack","matched","conditionStack","offset","ch","lines","unput","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","DEFAULT_DIAGRAM_DIRECTION","STMT_CLASSDEF","STMT_APPLYCLASS","START_NODE","START_TYPE","END_NODE","END_TYPE","COLOR_KEYWORD","FILL_KEYWORD","BG_FILL","STYLECLASS_SEP","newClassesList","direction","rootDoc","newDoc","relations","states","documents","currentDocument","startEndCount","dividerCnt","lineType","LINE","DOTTED_LINE","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","clone","JSON","stringify","getRootDoc","docTranslator","first","currentDoc","generateId","docNode","_doc","addState","textStyles","addRelation","addStyleClass","setCssClass","descr","classes2","styles2","trimmedId","descriptions","addDescription","_typeof","des","classesList","cssClass","stylesList","setStyle","textStylesList","textStyle","setTextStyle","saveCommon","clear$1","getState","logDocuments","getRelations","startIdIfNeeded","fixedId","startTypeIfNeeded","endIdIfNeeded","endTypeIfNeeded","addRelationObjs","item1","item2","relationTitle","id1","type1","id2","type2","title","theState","_descr","startsWith","cleanupLabel","substring","styleAttributes","foundClass","attrib","fixedAttrib","newStyle1","newStyle2","itemIds","cssClassName","foundState","styleText","getAccTitle","getAccDescription","setDiagramTitle","getStyles","transitionColor","nodeBorder","textColor","stateLabelColor","mainBkg","lineColor","background","noteBorderColor","noteBkgColor","noteTextColor","labelBackgroundColor","transitionLabelColor","tertiaryTextColor","specialStateColor","innerEndBackground","compositeBackground","stateBkg","stateBorder","compositeTitleBackground","altBackground","CLONE_SYMBOLS_FLAG","write","json","directed","isDirected","isMultigraph","isCompound","writeNodes","edges","writeEdges","graph","nodeValue","edgeValue","edge","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","clusterDb","descendants","parents","isDescendant","ancestorId","includes","edgeInCluster","clusterId","copy","newGraph","rootId","warn","children","data","data2","removeNode","extractDescendants","res","child","findNonClusterChild","_step2","_iterator2","_id","getAnchorId","externalConnections","adjustClustersAndEdges","depth","clusterData","d1","d2","_Object$keys","nonClusterChild","removeEdge","specialId","edge1","structuredClone","edge2","fromCluster","toCluster","graphlibJson","extractor","_step3","hasChildren","_iterator3","_step4","_iterator4","graphSettings","clusterGraph","clusterNode","_step5","_iterator5","sorter","result","assign","sorted","sortNodesByHierarchy","siteConfig","shapeSvg","insert","rect2","useHtmlLabels","evaluate","flowchart","htmlLabels","createText","appendChild","createLabel","bbox","div","dv","getBoundingClientRect","halfPadding","diff","rx","ry","_getSubGraphTitleMarg","getSubGraphTitleMargins","subGraphTitleTopMargin","rectBox","intersect","point","intersectRect","noteGroup","roundedWithTitle","innerRect","append","_getSubGraphTitleMarg2","divider","shapes","clusterElems","insertCluster","elem","recursiveRender","_callee2","_elem","diagramType","parentCluster","clusters","edgePaths","edgeLabels","_getSubGraphTitleMarg3","subGraphTitleTotalMargin","_context2","all","map","_ref2","newEl","updateNodeBounds","setNodeElem","insertNode","_x7","insertEdgeLabel","layout","positionNode","points","paths","insertEdge","positionEdgeLabel","_x5","_x6","_ref3","_callee3","markers","_context3","insertMarkers","clear$2","clear$3","_x8","_x9","_x0","_x1","_x10"],"mappings":"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","file":"static/js/chunk-2db15290.193c875a.js","sourcesContent":["import { D as DEFAULT_STATE_TYPE, a as DIVIDER_TYPE, S as STMT_RELATION, b as STMT_STATE, c as DEFAULT_NESTED_DOC_DIR, p as parser, d as db, s as styles } from \"./styles-6aaf32cf.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select } from \"d3\";\nimport { l as log, c as getConfig, u as utils, i as configureSvgSize, e as common } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nconst SHAPE_STATE = \"rect\";\nconst SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nconst SHAPE_START = \"start\";\nconst SHAPE_END = \"end\";\nconst SHAPE_DIVIDER = \"divider\";\nconst SHAPE_GROUP = \"roundedWithTitle\";\nconst SHAPE_NOTE = \"note\";\nconst SHAPE_NOTEGROUP = \"noteGroup\";\nconst CSS_DIAGRAM = \"statediagram\";\nconst CSS_STATE = \"state\";\nconst CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\nconst CSS_EDGE = \"transition\";\nconst CSS_NOTE = \"note\";\nconst CSS_NOTE_EDGE = \"note-edge\";\nconst CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\nconst CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\nconst CSS_CLUSTER = \"cluster\";\nconst CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\nconst CSS_CLUSTER_ALT = \"cluster-alt\";\nconst CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\nconst PARENT = \"parent\";\nconst NOTE = \"note\";\nconst DOMID_STATE = \"state\";\nconst DOMID_TYPE_SPACER = \"----\";\nconst NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\nconst PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\nconst G_EDGE_STYLE = \"fill:none\";\nconst G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nconst G_EDGE_LABELPOS = \"c\";\nconst G_EDGE_LABELTYPE = \"text\";\nconst G_EDGE_THICKNESS = \"normal\";\nlet nodeDb = {};\nlet graphItemCount = 0;\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    cnf[key];\n  }\n};\nconst getClasses = function(text, diagramObj) {\n  diagramObj.db.extract(diagramObj.db.getRootDocV2());\n  return diagramObj.db.getClasses();\n};\nfunction getClassesFromDbInfo(dbInfoItem) {\n  if (dbInfoItem === void 0 || dbInfoItem === null) {\n    return \"\";\n  } else {\n    if (dbInfoItem.classes) {\n      return dbInfoItem.classes.join(\" \");\n    } else {\n      return \"\";\n    }\n  }\n}\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\n}\nconst setupNode = (g, parent, parsedItem, diagramStates, diagramDb, altFlag) => {\n  const itemId = parsedItem.id;\n  const classStr = getClassesFromDbInfo(diagramStates[itemId]);\n  if (itemId !== \"root\") {\n    let shape = SHAPE_STATE;\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    }\n    if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n    if (!nodeDb[itemId]) {\n      nodeDb[itemId] = {\n        id: itemId,\n        shape,\n        description: common.sanitizeText(itemId, getConfig()),\n        classes: `${classStr} ${CSS_DIAGRAM_STATE}`\n      };\n    }\n    const newNode = nodeDb[itemId];\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n      newNode.description = common.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n    if (newNode.description.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      newNode.shape = SHAPE_STATE;\n    }\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for \", itemId, getDir(parsedItem));\n      newNode.type = \"group\";\n      newNode.dir = getDir(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.classes = newNode.classes + \" \" + CSS_DIAGRAM_CLUSTER + \" \" + (altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\");\n    }\n    const nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      labelText: newNode.description,\n      // typeof newNode.description === 'object'\n      //   ? newNode.description[0]\n      //   : newNode.description,\n      classes: newNode.classes,\n      style: \"\",\n      //styles.style,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      padding: 15\n      //getConfig().flowchart.padding\n    };\n    nodeData.centerLabel = true;\n    if (parsedItem.note) {\n      const noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        labelText: parsedItem.note.text,\n        classes: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        style: \"\",\n        // styles.style,\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        padding: 15\n        //getConfig().flowchart.padding\n      };\n      const groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        labelText: parsedItem.note.text,\n        classes: newNode.classes,\n        style: \"\",\n        // styles.style,\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        padding: 0\n        //getConfig().flowchart.padding\n      };\n      graphItemCount++;\n      const parentNodeId = itemId + PARENT_ID;\n      g.setNode(parentNodeId, groupData);\n      g.setNode(noteData.id, noteData);\n      g.setNode(itemId, nodeData);\n      g.setParent(itemId, parentNodeId);\n      g.setParent(noteData.id, parentNodeId);\n      let from = itemId;\n      let to = noteData.id;\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n      g.setEdge(from, to, {\n        arrowhead: \"none\",\n        arrowType: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS\n      });\n    } else {\n      g.setNode(itemId, nodeData);\n    }\n  }\n  if (parent && parent.id !== \"root\") {\n    log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n    g.setParent(itemId, parent.id);\n  }\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(g, parsedItem, parsedItem.doc, diagramStates, diagramDb, !altFlag);\n  }\n};\nconst setupDoc = (g, parentParsedItem, doc, diagramStates, diagramDb, altFlag) => {\n  log.trace(\"items\", doc);\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case DEFAULT_STATE_TYPE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case STMT_RELATION:\n        {\n          setupNode(g, parentParsedItem, item.state1, diagramStates, diagramDb, altFlag);\n          setupNode(g, parentParsedItem, item.state2, diagramStates, diagramDb, altFlag);\n          const edgeData = {\n            id: \"edge\" + graphItemCount,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE\n          };\n          g.setEdge(item.state1.id, item.state2.id, edgeData, graphItemCount);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n};\nconst getDir = (parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  let dir = defaultDir;\n  if (parsedItem.doc) {\n    for (let i = 0; i < parsedItem.doc.length; i++) {\n      const parsedItemDoc = parsedItem.doc[i];\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n  return dir;\n};\nconst draw = async function(text, id, _version, diag) {\n  log.info(\"Drawing state diagram (v2)\", id);\n  nodeDb = {};\n  diag.db.getDirection();\n  const { securityLevel, state: conf } = getConfig();\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n  log.info(diag.db.getRootDocV2());\n  diag.db.extract(diag.db.getRootDocV2());\n  log.info(diag.db.getRootDocV2());\n  const diagramStates = diag.db.getStates();\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: getDir(diag.db.getRootDocV2()),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  setupNode(g, void 0, diag.db.getRootDocV2(), diagramStates, diag.db, true);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"barb\"], CSS_DIAGRAM, id);\n  const padding = 8;\n  utils.insertTitle(svg, \"statediagramTitleText\", conf.titleTopMargin, diag.db.getDiagramTitle());\n  const bounds = svg.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  svg.attr(\"class\", CSS_DIAGRAM);\n  const svgBounds = svg.node().getBBox();\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  svg.attr(\"viewBox\", vBox);\n  const labels = document.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n  for (const label of labels) {\n    const dim = label.getBBox();\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", SHAPE_STATE);\n    rect.setAttribute(\"rx\", 0);\n    rect.setAttribute(\"ry\", 0);\n    rect.setAttribute(\"width\", dim.width);\n    rect.setAttribute(\"height\", dim.height);\n    label.insertBefore(rect, label.firstChild);\n  }\n};\nconst renderer = {\n  setConf,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n","import { c as getConfig, g as getAccTitle, s as setAccTitle, a as getAccDescription, b as setAccDescription, q as setDiagramTitle, t as getDiagramTitle, l as log, e as common, v as clear$1, I as generateId } from \"./mermaid-b5860b54.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 2], $V1 = [1, 3], $V2 = [1, 4], $V3 = [2, 4], $V4 = [1, 9], $V5 = [1, 11], $V6 = [1, 15], $V7 = [1, 16], $V8 = [1, 17], $V9 = [1, 18], $Va = [1, 30], $Vb = [1, 19], $Vc = [1, 20], $Vd = [1, 21], $Ve = [1, 22], $Vf = [1, 23], $Vg = [1, 25], $Vh = [1, 26], $Vi = [1, 27], $Vj = [1, 28], $Vk = [1, 29], $Vl = [1, 32], $Vm = [1, 33], $Vn = [1, 34], $Vo = [1, 35], $Vp = [1, 31], $Vq = [1, 4, 5, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 41, 44, 45, 46, 47, 50], $Vr = [1, 4, 5, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 41, 44, 45, 46, 47, 50], $Vs = [4, 5, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 41, 44, 45, 46, 47, 50];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SPACE\": 4, \"NL\": 5, \"SD\": 6, \"document\": 7, \"line\": 8, \"statement\": 9, \"classDefStatement\": 10, \"cssClassStatement\": 11, \"idStatement\": 12, \"DESCR\": 13, \"-->\": 14, \"HIDE_EMPTY\": 15, \"scale\": 16, \"WIDTH\": 17, \"COMPOSIT_STATE\": 18, \"STRUCT_START\": 19, \"STRUCT_STOP\": 20, \"STATE_DESCR\": 21, \"AS\": 22, \"ID\": 23, \"FORK\": 24, \"JOIN\": 25, \"CHOICE\": 26, \"CONCURRENT\": 27, \"note\": 28, \"notePosition\": 29, \"NOTE_TEXT\": 30, \"direction\": 31, \"acc_title\": 32, \"acc_title_value\": 33, \"acc_descr\": 34, \"acc_descr_value\": 35, \"acc_descr_multiline_value\": 36, \"classDef\": 37, \"CLASSDEF_ID\": 38, \"CLASSDEF_STYLEOPTS\": 39, \"DEFAULT\": 40, \"class\": 41, \"CLASSENTITY_IDS\": 42, \"STYLECLASS\": 43, \"direction_tb\": 44, \"direction_bt\": 45, \"direction_rl\": 46, \"direction_lr\": 47, \"eol\": 48, \";\": 49, \"EDGE_STATE\": 50, \"STYLE_SEPARATOR\": 51, \"left_of\": 52, \"right_of\": 53, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SPACE\", 5: \"NL\", 6: \"SD\", 13: \"DESCR\", 14: \"-->\", 15: \"HIDE_EMPTY\", 16: \"scale\", 17: \"WIDTH\", 18: \"COMPOSIT_STATE\", 19: \"STRUCT_START\", 20: \"STRUCT_STOP\", 21: \"STATE_DESCR\", 22: \"AS\", 23: \"ID\", 24: \"FORK\", 25: \"JOIN\", 26: \"CHOICE\", 27: \"CONCURRENT\", 28: \"note\", 30: \"NOTE_TEXT\", 32: \"acc_title\", 33: \"acc_title_value\", 34: \"acc_descr\", 35: \"acc_descr_value\", 36: \"acc_descr_multiline_value\", 37: \"classDef\", 38: \"CLASSDEF_ID\", 39: \"CLASSDEF_STYLEOPTS\", 40: \"DEFAULT\", 41: \"class\", 42: \"CLASSENTITY_IDS\", 43: \"STYLECLASS\", 44: \"direction_tb\", 45: \"direction_bt\", 46: \"direction_rl\", 47: \"direction_lr\", 49: \";\", 50: \"EDGE_STATE\", 51: \"STYLE_SEPARATOR\", 52: \"left_of\", 53: \"right_of\" },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [8, 1], [8, 1], [9, 1], [9, 1], [9, 1], [9, 2], [9, 3], [9, 4], [9, 1], [9, 2], [9, 1], [9, 4], [9, 3], [9, 6], [9, 1], [9, 1], [9, 1], [9, 1], [9, 4], [9, 4], [9, 1], [9, 2], [9, 2], [9, 1], [10, 3], [10, 3], [11, 3], [31, 1], [31, 1], [31, 1], [31, 1], [48, 1], [48, 1], [12, 1], [12, 1], [12, 3], [12, 3], [29, 1], [29, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 3:\n          yy.setRootDoc($$[$0]);\n          return $$[$0];\n        case 4:\n          this.$ = [];\n          break;\n        case 5:\n          if ($$[$0] != \"nl\") {\n            $$[$0 - 1].push($$[$0]);\n            this.$ = $$[$0 - 1];\n          }\n          break;\n        case 6:\n        case 7:\n          this.$ = $$[$0];\n          break;\n        case 8:\n          this.$ = \"nl\";\n          break;\n        case 11:\n          this.$ = $$[$0];\n          break;\n        case 12:\n          const stateStmt = $$[$0 - 1];\n          stateStmt.description = yy.trimColon($$[$0]);\n          this.$ = stateStmt;\n          break;\n        case 13:\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 2], state2: $$[$0] };\n          break;\n        case 14:\n          const relDescription = yy.trimColon($$[$0]);\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 3], state2: $$[$0 - 1], description: relDescription };\n          break;\n        case 18:\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: \"\", doc: $$[$0 - 1] };\n          break;\n        case 19:\n          var id = $$[$0];\n          var description = $$[$0 - 2].trim();\n          if ($$[$0].match(\":\")) {\n            var parts = $$[$0].split(\":\");\n            id = parts[0];\n            description = [description, parts[1]];\n          }\n          this.$ = { stmt: \"state\", id, type: \"default\", description };\n          break;\n        case 20:\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: $$[$0 - 5], doc: $$[$0 - 1] };\n          break;\n        case 21:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"fork\" };\n          break;\n        case 22:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"join\" };\n          break;\n        case 23:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"choice\" };\n          break;\n        case 24:\n          this.$ = { stmt: \"state\", id: yy.getDividerId(), type: \"divider\" };\n          break;\n        case 25:\n          this.$ = { stmt: \"state\", id: $$[$0 - 1].trim(), note: { position: $$[$0 - 2].trim(), text: $$[$0].trim() } };\n          break;\n        case 28:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 29:\n        case 30:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 31:\n        case 32:\n          this.$ = { stmt: \"classDef\", id: $$[$0 - 1].trim(), classes: $$[$0].trim() };\n          break;\n        case 33:\n          this.$ = { stmt: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 34:\n          yy.setDirection(\"TB\");\n          this.$ = { stmt: \"dir\", value: \"TB\" };\n          break;\n        case 35:\n          yy.setDirection(\"BT\");\n          this.$ = { stmt: \"dir\", value: \"BT\" };\n          break;\n        case 36:\n          yy.setDirection(\"RL\");\n          this.$ = { stmt: \"dir\", value: \"RL\" };\n          break;\n        case 37:\n          yy.setDirection(\"LR\");\n          this.$ = { stmt: \"dir\", value: \"LR\" };\n          break;\n        case 40:\n        case 41:\n          this.$ = { stmt: \"state\", id: $$[$0].trim(), type: \"default\", description: \"\" };\n          break;\n        case 42:\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\n          break;\n        case 43:\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: $V0, 5: $V1, 6: $V2 }, { 1: [3] }, { 3: 5, 4: $V0, 5: $V1, 6: $V2 }, { 3: 6, 4: $V0, 5: $V1, 6: $V2 }, o([1, 4, 5, 15, 16, 18, 21, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 41, 44, 45, 46, 47, 50], $V3, { 7: 7 }), { 1: [2, 1] }, { 1: [2, 2] }, { 1: [2, 3], 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 15: $V6, 16: $V7, 18: $V8, 21: $V9, 23: $Va, 24: $Vb, 25: $Vc, 26: $Vd, 27: $Ve, 28: $Vf, 31: 24, 32: $Vg, 34: $Vh, 36: $Vi, 37: $Vj, 41: $Vk, 44: $Vl, 45: $Vm, 46: $Vn, 47: $Vo, 50: $Vp }, o($Vq, [2, 5]), { 9: 36, 10: 12, 11: 13, 12: 14, 15: $V6, 16: $V7, 18: $V8, 21: $V9, 23: $Va, 24: $Vb, 25: $Vc, 26: $Vd, 27: $Ve, 28: $Vf, 31: 24, 32: $Vg, 34: $Vh, 36: $Vi, 37: $Vj, 41: $Vk, 44: $Vl, 45: $Vm, 46: $Vn, 47: $Vo, 50: $Vp }, o($Vq, [2, 7]), o($Vq, [2, 8]), o($Vq, [2, 9]), o($Vq, [2, 10]), o($Vq, [2, 11], { 13: [1, 37], 14: [1, 38] }), o($Vq, [2, 15]), { 17: [1, 39] }, o($Vq, [2, 17], { 19: [1, 40] }), { 22: [1, 41] }, o($Vq, [2, 21]), o($Vq, [2, 22]), o($Vq, [2, 23]), o($Vq, [2, 24]), { 29: 42, 30: [1, 43], 52: [1, 44], 53: [1, 45] }, o($Vq, [2, 27]), { 33: [1, 46] }, { 35: [1, 47] }, o($Vq, [2, 30]), { 38: [1, 48], 40: [1, 49] }, { 42: [1, 50] }, o($Vr, [2, 40], { 51: [1, 51] }), o($Vr, [2, 41], { 51: [1, 52] }), o($Vq, [2, 34]), o($Vq, [2, 35]), o($Vq, [2, 36]), o($Vq, [2, 37]), o($Vq, [2, 6]), o($Vq, [2, 12]), { 12: 53, 23: $Va, 50: $Vp }, o($Vq, [2, 16]), o($Vs, $V3, { 7: 54 }), { 23: [1, 55] }, { 23: [1, 56] }, { 22: [1, 57] }, { 23: [2, 44] }, { 23: [2, 45] }, o($Vq, [2, 28]), o($Vq, [2, 29]), { 39: [1, 58] }, { 39: [1, 59] }, { 43: [1, 60] }, { 23: [1, 61] }, { 23: [1, 62] }, o($Vq, [2, 13], { 13: [1, 63] }), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 15: $V6, 16: $V7, 18: $V8, 20: [1, 64], 21: $V9, 23: $Va, 24: $Vb, 25: $Vc, 26: $Vd, 27: $Ve, 28: $Vf, 31: 24, 32: $Vg, 34: $Vh, 36: $Vi, 37: $Vj, 41: $Vk, 44: $Vl, 45: $Vm, 46: $Vn, 47: $Vo, 50: $Vp }, o($Vq, [2, 19], { 19: [1, 65] }), { 30: [1, 66] }, { 23: [1, 67] }, o($Vq, [2, 31]), o($Vq, [2, 32]), o($Vq, [2, 33]), o($Vr, [2, 42]), o($Vr, [2, 43]), o($Vq, [2, 14]), o($Vq, [2, 18]), o($Vs, $V3, { 7: 68 }), o($Vq, [2, 25]), o($Vq, [2, 26]), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 15: $V6, 16: $V7, 18: $V8, 20: [1, 69], 21: $V9, 23: $Va, 24: $Vb, 25: $Vc, 26: $Vd, 27: $Ve, 28: $Vf, 31: 24, 32: $Vg, 34: $Vh, 36: $Vi, 37: $Vj, 41: $Vk, 44: $Vl, 45: $Vm, 46: $Vn, 47: $Vo, 50: $Vp }, o($Vq, [2, 20])],\n    defaultActions: { 5: [2, 1], 6: [2, 2], 44: [2, 44], 45: [2, 45] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 40;\n          case 1:\n            return 44;\n          case 2:\n            return 45;\n          case 3:\n            return 46;\n          case 4:\n            return 47;\n          case 5:\n            break;\n          case 6:\n            break;\n          case 7:\n            return 5;\n          case 8:\n            break;\n          case 9:\n            break;\n          case 10:\n            break;\n          case 11:\n            break;\n          case 12:\n            this.pushState(\"SCALE\");\n            return 16;\n          case 13:\n            return 17;\n          case 14:\n            this.popState();\n            break;\n          case 15:\n            this.begin(\"acc_title\");\n            return 32;\n          case 16:\n            this.popState();\n            return \"acc_title_value\";\n          case 17:\n            this.begin(\"acc_descr\");\n            return 34;\n          case 18:\n            this.popState();\n            return \"acc_descr_value\";\n          case 19:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 20:\n            this.popState();\n            break;\n          case 21:\n            return \"acc_descr_multiline_value\";\n          case 22:\n            this.pushState(\"CLASSDEF\");\n            return 37;\n          case 23:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return \"DEFAULT_CLASSDEF_ID\";\n          case 24:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return 38;\n          case 25:\n            this.popState();\n            return 39;\n          case 26:\n            this.pushState(\"CLASS\");\n            return 41;\n          case 27:\n            this.popState();\n            this.pushState(\"CLASS_STYLE\");\n            return 42;\n          case 28:\n            this.popState();\n            return 43;\n          case 29:\n            this.pushState(\"SCALE\");\n            return 16;\n          case 30:\n            return 17;\n          case 31:\n            this.popState();\n            break;\n          case 32:\n            this.pushState(\"STATE\");\n            break;\n          case 33:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 24;\n          case 34:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n          case 35:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 26;\n          case 36:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 24;\n          case 37:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n          case 38:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 26;\n          case 39:\n            return 44;\n          case 40:\n            return 45;\n          case 41:\n            return 46;\n          case 42:\n            return 47;\n          case 43:\n            this.pushState(\"STATE_STRING\");\n            break;\n          case 44:\n            this.pushState(\"STATE_ID\");\n            return \"AS\";\n          case 45:\n            this.popState();\n            return \"ID\";\n          case 46:\n            this.popState();\n            break;\n          case 47:\n            return \"STATE_DESCR\";\n          case 48:\n            return 18;\n          case 49:\n            this.popState();\n            break;\n          case 50:\n            this.popState();\n            this.pushState(\"struct\");\n            return 19;\n          case 51:\n            break;\n          case 52:\n            this.popState();\n            return 20;\n          case 53:\n            break;\n          case 54:\n            this.begin(\"NOTE\");\n            return 28;\n          case 55:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 52;\n          case 56:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 53;\n          case 57:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE\");\n            break;\n          case 58:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE_ID\");\n            return \"AS\";\n          case 59:\n            break;\n          case 60:\n            return \"NOTE_TEXT\";\n          case 61:\n            this.popState();\n            return \"ID\";\n          case 62:\n            this.popState();\n            this.pushState(\"NOTE_TEXT\");\n            return 23;\n          case 63:\n            this.popState();\n            yy_.yytext = yy_.yytext.substr(2).trim();\n            return 30;\n          case 64:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 30;\n          case 65:\n            return 6;\n          case 66:\n            return 6;\n          case 67:\n            return 15;\n          case 68:\n            return 50;\n          case 69:\n            return 23;\n          case 70:\n            yy_.yytext = yy_.yytext.trim();\n            return 13;\n          case 71:\n            return 14;\n          case 72:\n            return 27;\n          case 73:\n            return 51;\n          case 74:\n            return 5;\n          case 75:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:default\\b)/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:[\\s]+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:classDef\\s+)/i, /^(?:DEFAULT\\s+)/i, /^(?:\\w+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:class\\s+)/i, /^(?:(\\w+)+((,\\s*\\w+)*))/i, /^(?:[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:state\\s+)/i, /^(?:.*<<fork>>)/i, /^(?:.*<<join>>)/i, /^(?:.*<<choice>>)/i, /^(?:.*\\[\\[fork\\]\\])/i, /^(?:.*\\[\\[join\\]\\])/i, /^(?:.*\\[\\[choice\\]\\])/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:[\"])/i, /^(?:\\s*as\\s+)/i, /^(?:[^\\n\\{]*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n\\s\\{]+)/i, /^(?:\\n)/i, /^(?:\\{)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:\\})/i, /^(?:[\\n])/i, /^(?:note\\s+)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:\")/i, /^(?:\\s*as\\s*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n]*)/i, /^(?:\\s*[^:\\n\\s\\-]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:[\\s\\S]*?end note\\b)/i, /^(?:stateDiagram\\s+)/i, /^(?:stateDiagram-v2\\s+)/i, /^(?:hide empty description\\b)/i, /^(?:\\[\\*\\])/i, /^(?:[^:\\n\\s\\-\\{]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:-->)/i, /^(?:--)/i, /^(?::::)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"LINE\": { \"rules\": [9, 10], \"inclusive\": false }, \"struct\": { \"rules\": [9, 10, 22, 26, 32, 39, 40, 41, 42, 51, 52, 53, 54, 68, 69, 70, 71, 72], \"inclusive\": false }, \"FLOATING_NOTE_ID\": { \"rules\": [61], \"inclusive\": false }, \"FLOATING_NOTE\": { \"rules\": [58, 59, 60], \"inclusive\": false }, \"NOTE_TEXT\": { \"rules\": [63, 64], \"inclusive\": false }, \"NOTE_ID\": { \"rules\": [62], \"inclusive\": false }, \"NOTE\": { \"rules\": [55, 56, 57], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [28], \"inclusive\": false }, \"CLASS\": { \"rules\": [27], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [25], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [23, 24], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [20, 21], \"inclusive\": false }, \"acc_descr\": { \"rules\": [18], \"inclusive\": false }, \"acc_title\": { \"rules\": [16], \"inclusive\": false }, \"SCALE\": { \"rules\": [13, 14, 30, 31], \"inclusive\": false }, \"ALIAS\": { \"rules\": [], \"inclusive\": false }, \"STATE_ID\": { \"rules\": [45], \"inclusive\": false }, \"STATE_STRING\": { \"rules\": [46, 47], \"inclusive\": false }, \"FORK_STATE\": { \"rules\": [], \"inclusive\": false }, \"STATE\": { \"rules\": [9, 10, 33, 34, 35, 36, 37, 38, 43, 44, 48, 49, 50], \"inclusive\": false }, \"ID\": { \"rules\": [9, 10], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 22, 26, 29, 32, 50, 54, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nconst DEFAULT_DIAGRAM_DIRECTION = \"LR\";\nconst DEFAULT_NESTED_DOC_DIR = \"TB\";\nconst STMT_STATE = \"state\";\nconst STMT_RELATION = \"relation\";\nconst STMT_CLASSDEF = \"classDef\";\nconst STMT_APPLYCLASS = \"applyClass\";\nconst DEFAULT_STATE_TYPE = \"default\";\nconst DIVIDER_TYPE = \"divider\";\nconst START_NODE = \"[*]\";\nconst START_TYPE = \"start\";\nconst END_NODE = START_NODE;\nconst END_TYPE = \"end\";\nconst COLOR_KEYWORD = \"color\";\nconst FILL_KEYWORD = \"fill\";\nconst BG_FILL = \"bgFill\";\nconst STYLECLASS_SEP = \",\";\nfunction newClassesList() {\n  return {};\n}\nlet direction = DEFAULT_DIAGRAM_DIRECTION;\nlet rootDoc = [];\nlet classes = newClassesList();\nconst newDoc = () => {\n  return {\n    relations: [],\n    states: {},\n    documents: {}\n  };\n};\nlet documents = {\n  root: newDoc()\n};\nlet currentDocument = documents.root;\nlet startEndCount = 0;\nlet dividerCnt = 0;\nconst lineType = {\n  LINE: 0,\n  DOTTED_LINE: 1\n};\nconst relationType = {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3\n};\nconst clone = (o) => JSON.parse(JSON.stringify(o));\nconst setRootDoc = (o) => {\n  log.info(\"Setting root doc\", o);\n  rootDoc = o;\n};\nconst getRootDoc = () => rootDoc;\nconst docTranslator = (parent, node, first) => {\n  if (node.stmt === STMT_RELATION) {\n    docTranslator(parent, node.state1, true);\n    docTranslator(parent, node.state2, false);\n  } else {\n    if (node.stmt === STMT_STATE) {\n      if (node.id === \"[*]\") {\n        node.id = first ? parent.id + \"_start\" : parent.id + \"_end\";\n        node.start = first;\n      } else {\n        node.id = node.id.trim();\n      }\n    }\n    if (node.doc) {\n      const doc = [];\n      let currentDoc = [];\n      let i;\n      for (i = 0; i < node.doc.length; i++) {\n        if (node.doc[i].type === DIVIDER_TYPE) {\n          const newNode = clone(node.doc[i]);\n          newNode.doc = clone(currentDoc);\n          doc.push(newNode);\n          currentDoc = [];\n        } else {\n          currentDoc.push(node.doc[i]);\n        }\n      }\n      if (doc.length > 0 && currentDoc.length > 0) {\n        const newNode = {\n          stmt: STMT_STATE,\n          id: generateId(),\n          type: \"divider\",\n          doc: clone(currentDoc)\n        };\n        doc.push(clone(newNode));\n        node.doc = doc;\n      }\n      node.doc.forEach((docNode) => docTranslator(node, docNode, true));\n    }\n  }\n};\nconst getRootDocV2 = () => {\n  docTranslator({ id: \"root\" }, { id: \"root\", doc: rootDoc }, true);\n  return { id: \"root\", doc: rootDoc };\n};\nconst extract = (_doc) => {\n  let doc;\n  if (_doc.doc) {\n    doc = _doc.doc;\n  } else {\n    doc = _doc;\n  }\n  log.info(doc);\n  clear(true);\n  log.info(\"Extract\", doc);\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        addState(\n          item.id.trim(),\n          item.type,\n          item.doc,\n          item.description,\n          item.note,\n          item.classes,\n          item.styles,\n          item.textStyles\n        );\n        break;\n      case STMT_RELATION:\n        addRelation(item.state1, item.state2, item.description);\n        break;\n      case STMT_CLASSDEF:\n        addStyleClass(item.id.trim(), item.classes);\n        break;\n      case STMT_APPLYCLASS:\n        setCssClass(item.id.trim(), item.styleClass);\n        break;\n    }\n  });\n};\nconst addState = function(id, type = DEFAULT_STATE_TYPE, doc = null, descr = null, note = null, classes2 = null, styles2 = null, textStyles = null) {\n  const trimmedId = id == null ? void 0 : id.trim();\n  if (currentDocument.states[trimmedId] === void 0) {\n    log.info(\"Adding state \", trimmedId, descr);\n    currentDocument.states[trimmedId] = {\n      id: trimmedId,\n      descriptions: [],\n      type,\n      doc,\n      note,\n      classes: [],\n      styles: [],\n      textStyles: []\n    };\n  } else {\n    if (!currentDocument.states[trimmedId].doc) {\n      currentDocument.states[trimmedId].doc = doc;\n    }\n    if (!currentDocument.states[trimmedId].type) {\n      currentDocument.states[trimmedId].type = type;\n    }\n  }\n  if (descr) {\n    log.info(\"Setting state description\", trimmedId, descr);\n    if (typeof descr === \"string\") {\n      addDescription(trimmedId, descr.trim());\n    }\n    if (typeof descr === \"object\") {\n      descr.forEach((des) => addDescription(trimmedId, des.trim()));\n    }\n  }\n  if (note) {\n    currentDocument.states[trimmedId].note = note;\n    currentDocument.states[trimmedId].note.text = common.sanitizeText(\n      currentDocument.states[trimmedId].note.text,\n      getConfig()\n    );\n  }\n  if (classes2) {\n    log.info(\"Setting state classes\", trimmedId, classes2);\n    const classesList = typeof classes2 === \"string\" ? [classes2] : classes2;\n    classesList.forEach((cssClass) => setCssClass(trimmedId, cssClass.trim()));\n  }\n  if (styles2) {\n    log.info(\"Setting state styles\", trimmedId, styles2);\n    const stylesList = typeof styles2 === \"string\" ? [styles2] : styles2;\n    stylesList.forEach((style) => setStyle(trimmedId, style.trim()));\n  }\n  if (textStyles) {\n    log.info(\"Setting state styles\", trimmedId, styles2);\n    const textStylesList = typeof textStyles === \"string\" ? [textStyles] : textStyles;\n    textStylesList.forEach((textStyle) => setTextStyle(trimmedId, textStyle.trim()));\n  }\n};\nconst clear = function(saveCommon) {\n  documents = {\n    root: newDoc()\n  };\n  currentDocument = documents.root;\n  startEndCount = 0;\n  classes = newClassesList();\n  if (!saveCommon) {\n    clear$1();\n  }\n};\nconst getState = function(id) {\n  return currentDocument.states[id];\n};\nconst getStates = function() {\n  return currentDocument.states;\n};\nconst logDocuments = function() {\n  log.info(\"Documents = \", documents);\n};\nconst getRelations = function() {\n  return currentDocument.relations;\n};\nfunction startIdIfNeeded(id = \"\") {\n  let fixedId = id;\n  if (id === START_NODE) {\n    startEndCount++;\n    fixedId = `${START_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\nfunction startTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n  return id === START_NODE ? START_TYPE : type;\n}\nfunction endIdIfNeeded(id = \"\") {\n  let fixedId = id;\n  if (id === END_NODE) {\n    startEndCount++;\n    fixedId = `${END_TYPE}${startEndCount}`;\n  }\n  return fixedId;\n}\nfunction endTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n  return id === END_NODE ? END_TYPE : type;\n}\nfunction addRelationObjs(item1, item2, relationTitle) {\n  let id1 = startIdIfNeeded(item1.id.trim());\n  let type1 = startTypeIfNeeded(item1.id.trim(), item1.type);\n  let id2 = startIdIfNeeded(item2.id.trim());\n  let type2 = startTypeIfNeeded(item2.id.trim(), item2.type);\n  addState(\n    id1,\n    type1,\n    item1.doc,\n    item1.description,\n    item1.note,\n    item1.classes,\n    item1.styles,\n    item1.textStyles\n  );\n  addState(\n    id2,\n    type2,\n    item2.doc,\n    item2.description,\n    item2.note,\n    item2.classes,\n    item2.styles,\n    item2.textStyles\n  );\n  currentDocument.relations.push({\n    id1,\n    id2,\n    relationTitle: common.sanitizeText(relationTitle, getConfig())\n  });\n}\nconst addRelation = function(item1, item2, title) {\n  if (typeof item1 === \"object\") {\n    addRelationObjs(item1, item2, title);\n  } else {\n    const id1 = startIdIfNeeded(item1.trim());\n    const type1 = startTypeIfNeeded(item1);\n    const id2 = endIdIfNeeded(item2.trim());\n    const type2 = endTypeIfNeeded(item2);\n    addState(id1, type1);\n    addState(id2, type2);\n    currentDocument.relations.push({\n      id1,\n      id2,\n      title: common.sanitizeText(title, getConfig())\n    });\n  }\n};\nconst addDescription = function(id, descr) {\n  const theState = currentDocument.states[id];\n  const _descr = descr.startsWith(\":\") ? descr.replace(\":\", \"\").trim() : descr;\n  theState.descriptions.push(common.sanitizeText(_descr, getConfig()));\n};\nconst cleanupLabel = function(label) {\n  if (label.substring(0, 1) === \":\") {\n    return label.substr(2).trim();\n  } else {\n    return label.trim();\n  }\n};\nconst getDividerId = () => {\n  dividerCnt++;\n  return \"divider-id-\" + dividerCnt;\n};\nconst addStyleClass = function(id, styleAttributes = \"\") {\n  if (classes[id] === void 0) {\n    classes[id] = { id, styles: [], textStyles: [] };\n  }\n  const foundClass = classes[id];\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\n      if (attrib.match(COLOR_KEYWORD)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n};\nconst getClasses = function() {\n  return classes;\n};\nconst setCssClass = function(itemIds, cssClassName) {\n  itemIds.split(\",\").forEach(function(id) {\n    let foundState = getState(id);\n    if (foundState === void 0) {\n      const trimmedId = id.trim();\n      addState(trimmedId);\n      foundState = getState(trimmedId);\n    }\n    foundState.classes.push(cssClassName);\n  });\n};\nconst setStyle = function(itemId, styleText) {\n  const item = getState(itemId);\n  if (item !== void 0) {\n    item.textStyles.push(styleText);\n  }\n};\nconst setTextStyle = function(itemId, cssClassName) {\n  const item = getState(itemId);\n  if (item !== void 0) {\n    item.textStyles.push(cssClassName);\n  }\n};\nconst getDirection = () => direction;\nconst setDirection = (dir) => {\n  direction = dir;\n};\nconst trimColon = (str) => str && str[0] === \":\" ? str.substr(1).trim() : str.trim();\nconst db = {\n  getConfig: () => getConfig().state,\n  addState,\n  clear,\n  getState,\n  getStates,\n  getRelations,\n  getClasses,\n  getDirection,\n  addRelation,\n  getDividerId,\n  setDirection,\n  cleanupLabel,\n  lineType,\n  relationType,\n  logDocuments,\n  getRootDoc,\n  setRootDoc,\n  getRootDocV2,\n  extract,\n  trimColon,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  addStyleClass,\n  setCssClass,\n  addDescription,\n  setDiagramTitle,\n  getDiagramTitle\n};\nconst getStyles = (options) => `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.statediagramTitleText {\n  text-anchor: middle;\n  font-size: 18px;\n  fill: ${options.textColor};\n}\n`;\nconst styles = getStyles;\nexport {\n  DEFAULT_STATE_TYPE as D,\n  STMT_RELATION as S,\n  DIVIDER_TYPE as a,\n  STMT_STATE as b,\n  DEFAULT_NESTED_DOC_DIR as c,\n  db as d,\n  parser$1 as p,\n  styles as s\n};\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","import { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport { c as createLabel, g as getSubGraphTitleMargins, i as intersectRect, a as insertMarkers, b as clear$2, d as clear$3, u as updateNodeBounds, s as setNodeElem, e as insertNode, f as insertEdgeLabel, p as positionNode, h as insertEdge, j as positionEdgeLabel } from \"./edges-e0da2a9e.js\";\nimport { l as log, c as getConfig, m as evaluate } from \"./mermaid-b5860b54.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { select } from \"d3\";\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancestorId) => {\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, { style: node.labelStyle, useHtmlLabels }) : label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + (evaluate(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node && node.clusterNode) {\n        log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        setNodeElem(newEl, node);\n        log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          log.info(\"Node - the non recursive path\", v, node.id, node);\n          await insertNode(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  layout(graph);\n  log.info(\"Graph after layout:\", graphlibJson.write(graph));\n  let diff = 0;\n  const { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node && node.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\nconst render = async (elem, graph, markers, diagramType, id) => {\n  insertMarkers(elem, markers, diagramType, id);\n  clear$2();\n  clear$3();\n  clear();\n  clear$1();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n};\nexport {\n  render as r\n};\n"],"sourceRoot":""}