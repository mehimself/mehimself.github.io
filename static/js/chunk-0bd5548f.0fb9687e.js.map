{"version":3,"sources":["webpack:///./node_modules/lodash-es/_baseSet.js","webpack:///./node_modules/lodash-es/_basePickBy.js","webpack:///./node_modules/lodash-es/_basePick.js","webpack:///./node_modules/lodash-es/_flatRest.js","webpack:///./node_modules/lodash-es/pick.js","webpack:///./node_modules/lodash-es/_baseMap.js","webpack:///./node_modules/lodash-es/_baseRange.js","webpack:///./node_modules/lodash-es/_createRange.js","webpack:///./node_modules/lodash-es/range.js","webpack:///./node_modules/lodash-es/uniqueId.js","webpack:///./node_modules/lodash-es/flatten.js","webpack:///./node_modules/lodash-es/_trimmedEndIndex.js","webpack:///./node_modules/lodash-es/_baseTrim.js","webpack:///./node_modules/lodash-es/toNumber.js","webpack:///./node_modules/lodash-es/toFinite.js","webpack:///./node_modules/lodash-es/map.js","webpack:///./node_modules/dagre-d3-es/src/dagre/data/list.js","webpack:///./node_modules/dagre-d3-es/src/dagre/greedy-fas.js","webpack:///./node_modules/dagre-d3-es/src/dagre/acyclic.js","webpack:///./node_modules/lodash-es/_baseExtremum.js","webpack:///./node_modules/lodash-es/_baseGt.js","webpack:///./node_modules/lodash-es/max.js","webpack:///./node_modules/lodash-es/last.js","webpack:///./node_modules/lodash-es/mapValues.js","webpack:///./node_modules/lodash-es/_baseZipObject.js","webpack:///./node_modules/lodash-es/zipObject.js","webpack:///./node_modules/lodash-es/_baseLt.js","webpack:///./node_modules/lodash-es/min.js","webpack:///./node_modules/lodash-es/now.js","webpack:///./node_modules/dagre-d3-es/src/dagre/util.js","webpack:///./node_modules/dagre-d3-es/src/dagre/add-border-segments.js","webpack:///./node_modules/dagre-d3-es/src/dagre/coordinate-system.js","webpack:///./node_modules/dagre-d3-es/src/dagre/normalize.js","webpack:///./node_modules/lodash-es/minBy.js","webpack:///./node_modules/dagre-d3-es/src/dagre/rank/util.js","webpack:///./node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","webpack:///./node_modules/lodash-es/_createFind.js","webpack:///./node_modules/lodash-es/toInteger.js","webpack:///./node_modules/lodash-es/findIndex.js","webpack:///./node_modules/lodash-es/find.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/dijkstra.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/floyd-warshall.js","webpack:///./node_modules/lodash-es/isString.js","webpack:///./node_modules/lodash-es/_asciiSize.js","webpack:///./node_modules/lodash-es/_hasUnicode.js","webpack:///./node_modules/lodash-es/_unicodeSize.js","webpack:///./node_modules/lodash-es/_stringSize.js","webpack:///./node_modules/lodash-es/size.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","webpack:///./node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","webpack:///./node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","webpack:///./node_modules/dagre-d3-es/src/dagre/rank/index.js","webpack:///./node_modules/dagre-d3-es/src/dagre/nesting-graph.js","webpack:///./node_modules/lodash-es/cloneDeep.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","webpack:///./node_modules/lodash-es/_baseSortBy.js","webpack:///./node_modules/lodash-es/_compareAscending.js","webpack:///./node_modules/lodash-es/_compareMultiple.js","webpack:///./node_modules/lodash-es/_baseOrderBy.js","webpack:///./node_modules/lodash-es/sortBy.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/cross-count.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/init-order.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/barycenter.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/sort.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","webpack:///./node_modules/dagre-d3-es/src/dagre/order/index.js","webpack:///./node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","webpack:///./node_modules/lodash-es/forOwn.js","webpack:///./node_modules/lodash-es/forIn.js","webpack:///./node_modules/dagre-d3-es/src/dagre/position/bk.js","webpack:///./node_modules/dagre-d3-es/src/dagre/position/index.js","webpack:///./node_modules/dagre-d3-es/src/dagre/layout.js","webpack:///./node_modules/lodash-es/defaults.js"],"names":["baseSet","object","path","value","customizer","isObject","index","length","lastIndex","nested","key","newValue","objValue","undefined","basePickBy","paths","predicate","result","basePick","hasIn","flatRest","func","flatten","pick","baseMap","collection","iteratee","Array","nativeCeil","Math","ceil","nativeMax","max","baseRange","start","end","step","fromRight","createRange","toFinite","range","idCounter","uniqueId","prefix","id","array","reWhitespace","trimmedEndIndex","string","test","charAt","reTrimStart","baseTrim","slice","replace","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","isSymbol","other","valueOf","isBinary","INFINITY","MAX_INTEGER","sign","map","List","sentinel","_next","_prev","this","_sentinel","entry","unlink","strs","curr","push","JSON","stringify","filterOutLinks","join","k","v","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","nodeCount","state","buildState","results","doGreedyFAS","graph","buckets","zeroIdx","e","outEdges","w","sources","sinks","dequeue","removeNode","i","concat","collectPredecessors","inEdges","edge","weight","uEntry","node","out","assignBucket","wEntry","fasGraph","maxIn","maxOut","nodes","setNode","in","edges","prevWeight","edgeWeight","setEdge","enqueue","run","fas","acyclicer","dfsFAS","label","removeEdge","forwardName","name","reversed","stack","visited","dfs","undo","baseExtremum","comparator","current","computed","baseGt","identity","mapValues","baseZipObject","props","values","assignFunc","valsLength","zipObject","baseLt","now","Date","addDummyNode","type","attrs","hasNode","dummy","simplify","simplified","setGraph","simpleLabel","minlen","asNonCompoundGraph","multigraph","isMultigraph","children","intersectRect","rect","point","sx","sy","x","y","dx","dy","width","h","height","Error","abs","buildLayerMatrix","layering","rank","order","normalizeRanks","min","removeEmptyRanks","offset","layers","delta","nodeRankFactor","vs","addBorderNode","arguments","partition","fn","lhs","rhs","console","log","notime","addBorderSegments","borderLeft","borderRight","minRank","maxRank","prop","sg","sgNode","borderType","prev","setParent","adjust","rankDir","rankdir","toLowerCase","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","points","swapXYOne","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","labelRank","edgeObj","labelpos","origLabel","successors","minBy","longestPath","Number","POSITIVE_INFINITY","slack","feasibleTree","t","directed","size","tightTree","findMinSlackEdge","shiftRanks","nodeEdges","edgeV","createFind","findIndexFunc","fromIndex","iterable","Object","isArrayLike","keys","toInteger","remainder","findIndex","find","stringTag","isString","isArray","isObjectLike","asciiSize","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsZWJ","reHasUnicode","RegExp","hasUnicode","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeSize","stringSize","mapTag","setTag","tag","topsort","visit","CycleException","predecessors","navigation","isDirected","neighbors","bind","acc","doDfs","postorder","preorder","prototype","networkSimplex","f","initLowLimValues","initCutValues","leaveEdge","enterEdge","exchangeEdges","assignCutValue","child","childLab","parent","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","tree","root","dfsAssignLowLim","nextLim","low","lim","hasEdge","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","updateRanks","flipped","u","rootLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","treeDepths","nodeSep","nestingRoot","sumWeights","top","bottom","borderTop","borderBottom","childNode","childTop","childBottom","thisWeight","nestingEdge","depth","cleanup","graphLabel","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","addSubgraphConstraints","cg","rootPrev","prevChild","buildLayerGraph","relationship","createRootNode","compound","setDefaultNodeLabel","baseSortBy","comparer","sort","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","baseOrderBy","iteratees","sortBy","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","forEach","weightSum","initOrder","simpleNodes","orderedVs","barycenter","movable","inV","nodeU","sum","resolveConflicts","entries","mappedEntries","tmp","indegree","entryV","entryW","sourceSet","doResolveConflicts","handleIn","vEntry","merged","mergeEntries","handleOut","pop","reverse","target","source","biasRight","parts","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","last","bias","sortSubgraph","bl","br","subgraphs","barycenters","subgraphResult","mergeBarycenters","expandSubgraphs","blPred","brPred","downLayerGraphs","buildLayerGraphs","upLayerGraphs","assignOrder","best","bestCC","lastBest","sweepLayerGraphs","ranks","layerGraphs","lg","sorted","layer","parentDummyChains","postorderNums","pathData","findPath","lca","pathIdx","pathV","ascending","vPath","wPath","forOwn","forIn","keysIn","findType1Conflicts","conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","align","prevIdx","ws","mp","floor","il","horizontalCompaction","reverseSep","xs","blockG","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","pass1","reduce","pass2","blockGraph","sepFn","sep","nodesep","edgesep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","balance","ul","ignore","positionX","adjustedLayering","inner","smallestWidth","edgeSep","position","positionY","rankSep","ranksep","prevY","maxHeight","layout","opts","time","debugTiming","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","injectEdgeLabelProxies","assignRankMinMax","removeEdgeLabelProxies","insertSelfEdges","positionSelfEdges","removeBorderNodes","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","inputLabel","layoutLabel","graphNumAttrs","graphDefaults","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","labeloffset","edgeAttrs","canonicalize","selectNumberAttrs","minX","maxX","minY","maxY","marginX","marginx","marginY","marginy","getExtremes","p","p1","p2","nodeV","nodeW","unshift","b","l","r","selfEdges","orderShift","selfEdge","selfNode","obj","newAttrs","objectProto","hasOwnProperty","defaults","guard","propsIndex","propsLength","call"],"mappings":"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","file":"static/js/chunk-0bd5548f.0fb9687e.js","sourcesContent":["import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    })\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    })\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      // @ts-expect-error\n      attrs.dummy = 'edge-label';\n      // @ts-expect-error\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      })\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\n\nexport { dijkstra };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(\n    g,\n    String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      }\n  );\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function (edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\n        'dijkstra does not allow negative edge weights. ' +\n          'Bad edge: ' +\n          edge +\n          ' Weight: ' +\n          weight\n      );\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n","import * as _ from 'lodash-es';\n\nexport { floydWarshall };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(\n    g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      }\n  );\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n","import asciiSize from './_asciiSize.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeSize from './_unicodeSize.js';\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nexport default stringSize;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport stringSize from './_stringSize.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nexport default size;\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    })\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos'\n      );\n    })\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    })\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\nexport { initOrder };\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    })\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 }\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    }\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return _.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      })\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      })\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n"],"sourceRoot":""}